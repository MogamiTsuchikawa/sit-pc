{"version":3,"sources":["comp/pc-spec-table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PCSpecTable","props","useEffect","console","log","jsonObj","Table","striped","bordered","hover","map","tmp","className","kind","href","name","display","os","cpu","ram","ssd","weight","wifi","intel_mac","m1_mac","App","useState","setPcspec","setKind","require","urlParamStr","window","location","search","substring","split","forEach","param","temp","Navbar","bg","variant","Brand","Container","Row","Accordion","defaultActiveKey","Toggle","as","Button","eventKey","Collapse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+sEA4EeA,EAzEsB,SAACC,GAIpC,OAHAC,qBAAU,WACRC,QAAQC,IAAIH,EAAMI,WACjB,IAED,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,mCACA,sEACA,oCACA,qCACA,0DACA,gEACA,8CACA,sCACA,kEAGJ,gCACGR,EAAMI,QAAQK,KAAI,SAACC,GAAD,OACnB,qBAAIC,UAAWD,EAAIE,MAAQZ,EAAMY,KAAO,gBAAkB,GAA1D,UACE,6BAAI,mBAAGC,KAAM,kCAAkCH,EAAIE,KAA/C,SAAsDF,EAAII,UAC/C,GAAdJ,EAAIK,QAEL,2DAEgB,GAAdL,EAAIK,QAEF,4EAEA,+BAAKL,EAAIK,QAAT,oCAGJ,6BAAKL,EAAIM,KACT,+BAAKN,EAAIO,IAAT,kBACA,+BAAKP,EAAIQ,IAAT,qBACa,GAAZR,EAAIS,IAEL,+BAAKT,EAAIS,IAAT,oBAEA,2DAEgB,GAAfT,EAAIU,OAEL,+BAAKV,EAAIU,OAAT,oBAEA,0DAEA,sCAASV,EAAIW,KAAb,kBACA,6BAAKX,EAAIY,UACT,8BACGZ,EAAIa,OACL,iDAEE,0DAIJ,gECCKC,MA3Df,WAAgB,IAAD,EACeC,mBAAmB,IADlC,mBACEC,GADF,aAEUD,mBAAS,IAFnB,mBAENb,EAFM,KAEDe,EAFC,KAmBb,OAhBA1B,qBAAU,WACR,IAAMG,EAAUwB,EAAQ,IACxBF,EAAUtB,GACV,IAAIyB,EAAcC,OAAOC,SAASC,OAC9BH,IAEFA,EAAcA,EAAYI,UAAU,IAExBC,MAAM,KAAKC,SAAS,SAAAC,GAC9B,IAAMC,EAAOD,EAAMF,MAAM,KACV,SAAZG,EAAK,IACNV,EAAQU,EAAK,GAAGJ,UAAU,EAAE,SAIjC,IAED,gCACE,cAACK,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,cAACF,EAAA,EAAOG,MAAR,CAAc5B,KAAK,GAAnB,sIAIF,eAAC6B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,8EAEF,eAACA,EAAA,EAAD,sKAC6B,uBAD7B,yGAEmB,mBAAG9B,KAAK,sCAAR,qBAFnB,0EAIA,cAAC8B,EAAA,EAAD,UACE,kGAEF,eAACA,EAAA,EAAD,WACE,mBAAG9B,KAAK,mEAAR,gFADF,eAC8F,0BAE9F,cAAC8B,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACI,cAACD,EAAA,EAAUE,OAAX,CAAkBC,GAAIC,IAAQR,QAAQ,OAAOS,SAAS,IAAtD,2BAGA,uBACA,cAACL,EAAA,EAAUM,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAAC,EAAD,CAAa7C,QAASwB,EAAQ,IAAwBhB,KAAMA,kBCrC3DuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9675c17.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport {PCSpec} from '../common';\nconst PCSpecTable: React.FC<Props> = (props) => {\n  useEffect(() => {\n    console.log(props.jsonObj);\n  }, []);\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>ディスプレイ</th>\n          <th>OS</th>\n          <th>CPU</th>\n          <th>メモリー</th>\n          <th>ストレージ</th>\n          <th>重さ</th>\n          <th>WiFi</th>\n          <th>Macに関して</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.jsonObj.map((tmp:PCSpec)=>(\n        <tr className={tmp.kind == props.kind ? \"table-success\" : \"\"}>\n          <td><a href={\"https://mogami.dev/sit-pc?kind=\"+tmp.kind}>{tmp.name}</a></td>\n          {tmp.display==-1 \n          ?\n          <td>指定無し</td>\n          :\n            tmp.display==-2\n              ?\n              <td>タブレット不可</td>\n              :\n              <td>{tmp.display}ｲﾝﾁ以上</td>\n            \n          }\n          <td>{tmp.os}</td>\n          <td>{tmp.cpu}以上</td>\n          <td>{tmp.ram}GB以上</td>\n          {tmp.ssd != -1\n          ?\n          <td>{tmp.ssd}GB以上</td>\n          :\n          <td>指定無し</td>\n          }\n          {tmp.weight != -1\n          ?\n          <td>{tmp.weight}kg以下</td>\n          :\n          <td>指定無し</td>\n          }\n          <td>WiFi{tmp.wifi}以上</td>\n          <td>{tmp.intel_mac ? \n          <div>\n            {tmp.m1_mac ?\n            <div>M1 MacもOK</div>\n            :\n              <div>intel Macのみ</div>\n            }\n          </div>\n          :\n          <div>Mac不可</div>\n          }</td>\n        </tr>\n        ))}\n      </tbody>\n      \n    </Table>\n  );\n}\ntype Props = {\n  jsonObj: PCSpec[];\n  kind: string;\n};\n\nexport default PCSpecTable;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container, Navbar, Row, Col, Accordion } from 'react-bootstrap';\nimport PCSpecTable from './comp/pc-spec-table';\nimport { PCSpec } from './common';\nfunction App() {\n  const [pcspec, setPcspec] = useState<PCSpec[]>([]);\n  const [kind,setKind] = useState(\"\");\n  useEffect(() => {\n    const jsonObj = require('./json/pc-spec.json');\n    setPcspec(jsonObj);\n    let urlParamStr = window.location.search;\n    if (urlParamStr) {\n      //?を除去\n      urlParamStr = urlParamStr.substring(1);\n      //urlパラメータをオブジェクトにまとめる\n      urlParamStr.split('&').forEach( param => {\n        const temp = param.split('=')\n        if(temp[0] === 'kind'){\n          setKind(temp[1].substring(0,1));\n        }\n      });\n    }\n  }, [])\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"\">\n          芝浦工業大学 非公式 新入生向けPC紹介サイト\n    </Navbar.Brand>\n      </Navbar>\n      <Container>\n        <Row>\n          <h3>このサイトは？</h3>\n        </Row>\n        <Row>\n          とある芝浦生がまとめた新入生向けのPC紹介サイトです。<br/>\n          このサイトを見ても決まらない場合は<a href=\"https://twitter.com/MogamiTsuchikaw\">Twitter</a>にて私に質問してOKです。\n        </Row>\n        <Row>\n          <h3>各学科のPC必要スペック</h3>\n        </Row>\n        <Row>\n          <a href=\"https://www.shibaura-it.ac.jp/examinee/undergraduate/pcspec.html\">芝浦工業大学公式サイト</a>より<br />\n        </Row>\n        <Row>\n        <Accordion defaultActiveKey=\"0\">\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Open or Close\n            </Accordion.Toggle>\n            <br/>\n            <Accordion.Collapse eventKey=\"0\">\n              <PCSpecTable jsonObj={require('./json/pc-spec.json')} kind={kind} />\n            </Accordion.Collapse>\n          </Accordion>\n        </Row>\n\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}